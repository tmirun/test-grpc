// @generated by protoc-gen-es v1.7.2 with parameter "target=ts"
// @generated from file address_book/v1/address_book.proto (package address_book.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Person } from "../../common/v1/person_pb.js";

/**
 * @generated from message address_book.v1.AddressBook
 */
export class AddressBook extends Message<AddressBook> {
  /**
   * @generated from field: repeated common.v1.Person people = 1;
   */
  people: Person[] = [];

  constructor(data?: PartialMessage<AddressBook>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "address_book.v1.AddressBook";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "people", kind: "message", T: Person, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressBook {
    return new AddressBook().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressBook {
    return new AddressBook().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressBook {
    return new AddressBook().fromJsonString(jsonString, options);
  }

  static equals(a: AddressBook | PlainMessage<AddressBook> | undefined, b: AddressBook | PlainMessage<AddressBook> | undefined): boolean {
    return proto3.util.equals(AddressBook, a, b);
  }
}

